I".<p><br /></p>

<h1 id="13장-스코프">13장 스코프</h1>

<h2 id="131-스코프란">13.1 스코프란?</h2>
<p>모든 식별자(변수 이름, 함수 이름, 클래스 이름 등)는 자신이 선언된 위치에 의해 다른 코드가 식별자 자신을 참조할 수 있는 유효 범위가 결정된다. 이를 스코프라 한다. 즉, 스코프는 식별자가 유효한 범위를 말한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">global</span><span class="dl">'</span><span class="p">;</span>

  <span class="kd">function</span> <span class="nx">foo</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">local</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">foo</span><span class="p">();</span>

  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
</code></pre></div></div>

<p>위 예제에서 코드의 가장 바깥 영역에 선언된 x 변수는 어디서든 참조할 수 있다. 하지만 foo함수 내부에서 선언된 x 변수는 foo 함수 내부에서만 참조할 수 있고 foo 함수 외부에서는 참조할 수 없다. 이때 두 개의 x 변수는 식별자 이름이 동일하지만 자신이 유효한 범위, 즉 스코프가 다른 별개의 변수다.</p>

<h2 id="132-스코프의-종류">13.2 스코프의 종류</h2>
<p>스코프는 전역과 지역으로 구분할 수 있다.</p>

<p><img width="506" alt="스크린샷 2022-04-20 오후 11 31 08" src="https://user-images.githubusercontent.com/44577555/164254346-4d8f28f9-6a38-4db3-89dd-da025da9cc4e.png" /></p>

<h3 id="1321-전역과-전역-스코프">13.2.1 전역과 전역 스코프</h3>
<p>전역이란 코드의 가장 바깥 영역을 말한다. 전역에 변수를 선언하면 전역 스코프를 갖는 전역 변수가 되고 어디서든지 참조할 수 있다.</p>

<h3 id="1322-지역과-지역-스코프">13.2.2 지역과 지역 스코프</h3>
<p>지역이란 함수 몸체 내부를 말한다. 지역 변수는 자신의 지역 스코프와 하위 지역 스코프에서 유효하다.<br />
위의 예제(그림 13-2)에서 inner 함수 내부에서 선언된 x 변수 이외에 이름이 같은 전역 변수 x가 존재한다. 이때 inner 함수 내부에서 x 변수를 참조하면 전역 변수 x를 참조하는 것이 아니라 inner 함수 내부의 x 변수를 참조한다. 이는 자바스크립트 엔진이 스코프 체인을 통해 참조할 변수를 검색했기 때문인다.</p>

<h2 id="133-스코프-체인">13.3 스코프 체인</h2>
<p>함수는 중첩될 수 있으므로 함수의 지역 스코프도 중첩될 수 있다. 이는 스코프가 함수의 중첩에 의해 계층적 구조를 갖는다는 것을 의미한다. 모든 스코프는 하나의 계층적 구조로 연결되며, 모든 지역 스코프의 최상위 스코프는 전역 스코프다. 이렇게 스코프가 계층적으로 연결된 것을 스코프 체인이라 한다. 변수를 참조할 때 자바스크립트 엔진은 스코프 체인을 통해 변수를 참조하는 코드의 스코프에서 시작하여 상위 스코프 방향으로 이동하며 선언된 변수를 검색한다.</p>

<h3 id="1331-스코프-체인에-의한-변수-검색">13.3.1 스코프 체인에 의한 변수 검색</h3>
<p>자바스크립트 엔진은 스코프 체인을 따라 변수를 참조하는 코드의 스코프에서 시작해서 상위 스코프 방향으로 이동하며 선언된 변수를 검색한다. 상위 스코프에서 유효한 변수는 하위 스코프에서 자유롭게 참조할 수 있지만 하위 스코프에서 유효한 변수를 상위 스코프에서 참조할 수는 없다.</p>

<h3 id="1332-스코프-체인에-의한-함수-검색">13.3.2 스코프 체인에 의한 함수 검색</h3>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">function</span> <span class="nx">foo</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">global function foo</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">};</span>
  
  <span class="kd">function</span> <span class="nx">bar</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">function</span> <span class="nx">foo</span><span class="p">()</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">local function foo</span><span class="dl">'</span><span class="p">);</span>
    <span class="p">};</span>
    <span class="nx">foo</span><span class="p">();</span>
  <span class="p">};</span>

  <span class="nx">bar</span><span class="p">();</span> <span class="c1">// local function foo</span>
</code></pre></div></div>
<p>함수도 식별자에 할당되기 때문에 스코프를 갖는다. 따라서 스코프를 “변수를 검색할 때 사용하는 규칙”이라고 표현하기보다는 “식별자를 검색하는 규칙”이라고 표현하는 편이 좀 더 적합하다.</p>

<h2 id="134-함수-레벨-스코프">13.4 함수 레벨 스코프</h2>
<p>지역은 함수 몸체 내부를 말하고 지역은 지역 스코프를 만든다고 했다. 이는 코드 블록이 아닌 함수에 의해서만 지역 스코프가 생성된다는 의미다.<br />
var 키워드로 선언된 변수는 오로지 함수의 코드 블록(함수 몸체)만을 지역 스코프로 인정한다. 이러한 특성을 함수 레벨 스코프라 한다. 따라서 아래 예제에서 if 문의 코드 블록 내에서 선언된 x 변수는 전역변수다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

  <span class="k">if</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 10 -&gt; x 변수 중복 선언으로 인해 값이 재 할당 되었다.</span>
</code></pre></div></div>
:ET