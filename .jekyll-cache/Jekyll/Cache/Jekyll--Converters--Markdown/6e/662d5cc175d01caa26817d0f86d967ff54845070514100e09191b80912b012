I"{]<p><br /></p>

<h1 id="09장-타입-변환과-단축-평가">09장 타입 변환과 단축 평가</h1>

<h2 id="91-타입-변환이란">9.1 타입 변환이란?</h2>
<p>개발자가 의도적으로 값의 타입을 변환하는 것을 <code class="language-plaintext highlighter-rouge">명시적 타입 변환</code> 또는 <code class="language-plaintext highlighter-rouge">타입 캐스팅</code>이라 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

  <span class="c1">// 의도적으로 x의 값의 타입을 string으로 변경</span>
  <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="nx">x</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span> 
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">str</span><span class="p">,</span> <span class="nx">str</span><span class="p">)</span> <span class="c1">// string 10</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">x</span><span class="p">)</span> <span class="c1">// number 10</span>
</code></pre></div></div>

<p>개발자의 의도와는 상관없이 자바스크립트 엔진에 의해 암묵적으로 타입이 자동 변환되는 것을 <code class="language-plaintext highlighter-rouge">암묵적 타입 변환</code> 또는 <code class="language-plaintext highlighter-rouge">타입 강제 변환</code> 이라 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

  <span class="c1">// 문자열 연결 연산자는 숫자 타입 x의 값을 바탕으로 새로운 문자열을 생성한다.</span>
  <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="dl">''</span><span class="p">;</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">str</span><span class="p">,</span> <span class="nx">str</span><span class="p">)</span> <span class="c1">// string 10</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">x</span><span class="p">)</span> <span class="c1">// number 10</span>
  
</code></pre></div></div>

<h2 id="92-암묵적-타입-변환">9.2 암묵적 타입 변환</h2>
<p>암묵적 타입 변환이 발생하면 문자열, 숫자, 불리언과 같은 원시 타입 중 하나로 타일을 자동 변환한다.</p>

<h3 id="921-문자열-타입으로-변환">9.2.1 문자열 타입으로 변환</h3>
<p>(+)연산자는 피연산자 중 하나 이상이 문자열이면 문자열 연결 연산자로 동작한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="mi">1</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">2</span><span class="dl">'</span> <span class="c1">// "12"</span>
  <span class="mi">0</span> <span class="o">+</span> <span class="dl">''</span> <span class="c1">//  "0"</span>
  <span class="kc">true</span> <span class="o">+</span> <span class="dl">''</span> <span class="c1">// "true"</span>
  <span class="kc">undefined</span> <span class="o">+</span> <span class="dl">''</span> <span class="c1">// "undefined"</span>
  <span class="p">(</span><span class="nb">Symbol</span><span class="p">())</span> <span class="o">+</span> <span class="dl">''</span> <span class="c1">// typeError : Cannot conver a Symbol value to a string</span>
  <span class="p">({})</span> <span class="o">+</span> <span class="dl">''</span> <span class="c1">// "[object Object]"</span>
  <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">]</span> <span class="o">+</span> <span class="dl">''</span> <span class="c1">// "10,20"</span>
  <span class="p">(</span><span class="kd">function</span><span class="p">(){})</span> <span class="c1">// "function(){}"</span>
</code></pre></div></div>

<h3 id="922-숫자-타입으로-변환">9.2.2 숫자 타입으로 변환</h3>
<p>산술 연산자의 피연산자 중에서 숫자 타입이 아닌 피연산자를 숫자 타입으로 암묵적 타입 변환한다. <code class="language-plaintext highlighter-rouge">피연산자를 숫자 타입으로 변환할 수 없는 경우</code>는 산술 연산을 수행할 수 없으므로 표현식의 <code class="language-plaintext highlighter-rouge">평가 결과는 NaN</code>이 된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="mi">1</span> <span class="o">-</span> <span class="dl">'</span><span class="s1">1</span><span class="dl">'</span> <span class="c1">// 0</span>
  <span class="mi">1</span> <span class="o">*</span> <span class="dl">'</span><span class="s1">10</span><span class="dl">'</span> <span class="c1">// 10</span>
  <span class="mi">1</span> <span class="o">/</span> <span class="dl">'</span><span class="s1">one</span><span class="dl">'</span> <span class="c1">// NaN</span>
  <span class="dl">'</span><span class="s1">1</span><span class="dl">'</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="c1">// true</span>
  <span class="o">+</span><span class="dl">''</span> <span class="c1">// 0</span>
  <span class="o">+</span><span class="dl">'</span><span class="s1">0</span><span class="dl">'</span> <span class="c1">// 0</span>
  <span class="o">+</span><span class="dl">'</span><span class="s1">1</span><span class="dl">'</span> <span class="c1">// 1</span>
  <span class="o">+</span><span class="dl">'</span><span class="s1">string</span><span class="dl">'</span> <span class="c1">// NaN</span>
  <span class="o">+</span><span class="kc">true</span> <span class="c1">// 1</span>
  <span class="o">+</span><span class="kc">false</span> <span class="c1">// 0</span>
  <span class="o">+</span><span class="kc">null</span> <span class="c1">// 0</span>
  <span class="o">+</span><span class="kc">undefined</span> <span class="c1">// NaN</span>
</code></pre></div></div>

<h3 id="923-불리언-타입으로-변환">9.2.3 불리언 타입으로 변환</h3>
<p>자바스크립트 엔진은 조건식의 평가 결과를 불리언 타입으로 암묵적 타입 변환한다. 이때 자바스크립트 엔진은 <code class="language-plaintext highlighter-rouge">불리언 타입이 아닌 값을 Truthy값 또는 Falsy 값으로 구분</code>한다.</p>

<h4 id="false-값으로-평가되는-falsy값">false 값으로 평가되는 Falsy값</h4>
<ul>
  <li>false</li>
  <li>undefined</li>
  <li>null</li>
  <li>0, -0</li>
  <li>NaN</li>
  <li>’‘(빈문자열)</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">if</span><span class="p">(</span><span class="dl">''</span><span class="p">)</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">1</span><span class="dl">'</span><span class="p">);</span>
  <span class="k">if</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">2</span><span class="dl">'</span><span class="p">);</span>
  <span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">3</span><span class="dl">'</span><span class="p">);</span>
  <span class="k">if</span><span class="p">(</span><span class="dl">'</span><span class="s1">str</span><span class="dl">'</span><span class="p">)</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">4</span><span class="dl">'</span><span class="p">);</span>
  <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="p">)</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">5</span><span class="dl">'</span><span class="p">);</span>

  <span class="c1">// 2 4</span>
</code></pre></div></div>

<h2 id="93-명시적-타입-변환">9.3 명시적 타입 변환</h2>
<p>개발자의 의도에 따라 타입을 변경.</p>

<h3 id="931-문자열-타입으로-변환">9.3.1 문자열 타입으로 변환</h3>
<ol>
  <li>String 생성자 함수를 new 연산자 없이 호출</li>
  <li>Object.prototype.toString 메서드 사용</li>
  <li>문자열 연결 연산자 이용</li>
</ol>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1">// 1. String 생성자 함수</span>
  <span class="nb">String</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// "1"</span>
  <span class="nb">String</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span> <span class="c1">// "true"</span>

  <span class="c1">// 2. toString 메서드</span>
  <span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span> <span class="c1">// "1"</span>
  <span class="p">(</span><span class="kc">NaN</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span> <span class="c1">// "NaN"</span>
  <span class="p">(</span><span class="kc">false</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span> <span class="c1">// "false"</span>

  <span class="c1">// 3. 문자열 연결 연산자</span>
  <span class="mi">1</span> <span class="o">+</span> <span class="dl">''</span><span class="p">;</span> <span class="c1">// "1"</span>
  <span class="kc">Infinity</span> <span class="o">+</span> <span class="dl">''</span><span class="p">;</span> <span class="c1">// "Infinity"</span>
  <span class="kc">true</span> <span class="o">+</span> <span class="dl">''</span><span class="p">;</span> <span class="c1">// "true"</span>
</code></pre></div></div>

<h3 id="932-숫자타입으로-변환">9.3.2 숫자타입으로 변환</h3>
<ol>
  <li>Number 생성자 함수를 new 연산자 없이 호출</li>
  <li>parseInt, parseFloat 함수 사용(문자열만 숫자 타입으로 변환 가능)</li>
  <li>단항 산술 연산자 이용 (+)</li>
  <li>산술 연산자 이용 (*)</li>
</ol>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1">// 1. Number 생성자 함수</span>
  <span class="nb">Number</span><span class="p">(</span><span class="dl">'</span><span class="s1">0</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// 0</span>
  <span class="nb">Number</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span> <span class="c1">// 1</span>

  <span class="c1">// 2. parseInt, parseFloat 함수</span>
  <span class="nb">parseInt</span><span class="p">(</span><span class="dl">'</span><span class="s1">0</span><span class="dl">'</span><span class="p">)</span> <span class="c1">// "1"</span>
  <span class="nb">parseFloat</span><span class="p">(</span><span class="dl">'</span><span class="s1">10.53</span><span class="dl">'</span><span class="p">)</span> <span class="c1">// 10.53</span>

  <span class="c1">// 3. + 단항 산술 연산자</span>
  <span class="o">+</span><span class="dl">'</span><span class="s1">0</span><span class="dl">'</span><span class="p">;</span> <span class="c1">// 0</span>
  <span class="o">+</span><span class="dl">'</span><span class="s1">-1</span><span class="dl">'</span><span class="p">;</span> <span class="c1">// -1</span>
  <span class="o">+</span><span class="kc">false</span><span class="p">;</span> <span class="c1">// 0</span>

  <span class="c1">// 3. * 산술 연산자</span>
  <span class="dl">'</span><span class="s1">0</span><span class="dl">'</span> <span class="o">*</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 0</span>
  <span class="dl">'</span><span class="s1">-1</span><span class="dl">'</span> <span class="o">*</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// -1</span>
  <span class="kc">true</span> <span class="o">*</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 1</span>
  
</code></pre></div></div>
<h3 id="933-불리언-타입으로-변환">9.3.3 불리언 타입으로 변환</h3>
<ol>
  <li>Boolean 생성자 함수를 new 연산자 없이 호출</li>
  <li>! 부정 논리 연산자를 두 번 사용</li>
</ol>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1">// 1. Boolean 생성자 함수</span>
  <span class="nb">Boolean</span><span class="p">(</span><span class="dl">'</span><span class="s1">x</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span>
  <span class="nb">Boolean</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span> <span class="c1">// false</span>
  <span class="nb">Boolean</span><span class="p">(</span><span class="dl">'</span><span class="s1">false</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span>
  <span class="nb">Boolean</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="c1">// false</span>
  <span class="nb">Boolean</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// true</span>
  <span class="nb">Boolean</span><span class="p">(</span><span class="kc">NaN</span><span class="p">);</span> <span class="c1">// false</span>
  <span class="nb">Boolean</span><span class="p">({});</span> <span class="c1">// true</span>
  <span class="nb">Boolean</span><span class="p">([]);</span> <span class="c1">// true</span>

  <span class="c1">// 2. 부정 논리 연산자를 두 번</span>
  <span class="o">!!</span><span class="dl">'</span><span class="s1">x</span><span class="dl">'</span><span class="p">;</span> <span class="c1">// true</span>
  <span class="o">!!</span><span class="dl">''</span><span class="p">;</span> <span class="c1">// false</span>
  <span class="o">!!</span><span class="dl">'</span><span class="s1">false</span><span class="dl">'</span><span class="p">;</span> <span class="c1">// true</span>
  <span class="o">!!</span><span class="mi">0</span><span class="p">;</span> <span class="c1">// false</span>
  <span class="o">!!</span><span class="kc">NaN</span><span class="p">;</span> <span class="c1">// false</span>
  <span class="o">!!</span><span class="kc">undefined</span><span class="p">;</span> <span class="c1">// false</span>
  <span class="o">!!</span><span class="p">{};</span> <span class="c1">//true</span>
  <span class="o">!!</span><span class="p">[];</span> <span class="c1">//true</span>
</code></pre></div></div>

<h2 id="94-단축-평가">9.4 단축 평가</h2>
<h3 id="941-논리-연산자를-사용한-단축-평가">9.4.1 논리 연산자를 사용한 단축 평가</h3>
<h4 id="논리합-논리곱">논리합(||) 논리곱(&amp;&amp;)</h4>
<p><code class="language-plaintext highlighter-rouge">논리곱(&amp;&amp;)</code> 연산자는 두 개의 피연산자가 <code class="language-plaintext highlighter-rouge">모두 true로 평가될 때 true를 반환</code>한다. 논리곱 연산자는 논리 연산의 결과를 결정하는 두 번째 피연산자를 그대로 반환한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="dl">'</span><span class="s1">Cat</span><span class="dl">'</span> <span class="o">||</span> <span class="dl">'</span><span class="s1">Dog</span><span class="dl">'</span> <span class="c1">// "Dog"</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">논리합(||)</code> 연산자는 두 개의 피연산자 중 <code class="language-plaintext highlighter-rouge">하나만 true로 평가되어도 true를 반환</code>한다. 논리합 연산자는 논리 연산의 결과를 첫 번째 피 연산자가 결정한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="dl">'</span><span class="s1">Cat</span><span class="dl">'</span> <span class="o">||</span> <span class="dl">'</span><span class="s1">Dog</span><span class="dl">'</span> <span class="c1">// "Cat"</span>
</code></pre></div></div>

<p>논리 연산의 결과를 결정하는 피연산자를 타입 변환하지 않고 그대로 반환한다. 이를 단축 평가라 한다. 단축평가는 표현식을 평가하는 도중에 평가가 확정된 경우 나머지 평가 과정을 생략한다.</p>

<table>
  <thead>
    <tr>
      <td>단축 평가 표현식</td>
      <td>평가 결과</td>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>true || anything</td>
      <td>true</td>
    </tr>
    <tr>
      <td>false || anything</td>
      <td>anything</td>
    </tr>
    <tr>
      <td>true &amp;&amp; anything</td>
      <td>anything</td>
    </tr>
    <tr>
      <td>false &amp;&amp; anything</td>
      <td>false</td>
    </tr>
  </tbody>
</table>

<h4 id="if문-대체">if문 대체</h4>
<p>어떤 조건이 Truthy 값일 때 무언가를 해야 한다면 논리곱(&amp;&amp;) 연산자 표현식으로 if문을 대체할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">done</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
  <span class="kd">var</span> <span class="nx">message</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
  
  <span class="c1">// if문 사용</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">done</span><span class="p">)</span> <span class="nx">message</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">완료</span><span class="dl">'</span><span class="p">;</span>

  <span class="c1">// 논리곱 연산자 표현</span>
  <span class="nx">message</span> <span class="o">=</span> <span class="nx">done</span> <span class="o">&amp;&amp;</span> <span class="dl">'</span><span class="s1">완료</span><span class="dl">'</span><span class="p">;</span>

  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span> <span class="c1">// 완료</span>
</code></pre></div></div>
<p>어떤 조건이 Falsy 값일 때 무언가를 해야 한다면 논리합(||) 연산자 표현식으로 if문을 대체할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">done</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
  <span class="kd">var</span> <span class="nx">message</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
  
  <span class="c1">// if문 사용</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">done</span><span class="p">)</span> <span class="nx">message</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">미완료</span><span class="dl">'</span><span class="p">;</span>

  <span class="c1">// 논리곱 연산자 표현</span>
  <span class="nx">message</span> <span class="o">=</span> <span class="nx">done</span> <span class="o">||</span> <span class="dl">'</span><span class="s1">미완료</span><span class="dl">'</span><span class="p">;</span>

  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span> <span class="c1">// 미완료</span>
</code></pre></div></div>

<h3 id="942-옵셔널-체이닝-연산자">9.4.2 옵셔널 체이닝 연산자</h3>
<p>ES11에서 도입된 <code class="language-plaintext highlighter-rouge">옵셔널 체이닝 연산자 ?.는 좌항의 피연산자가 null 또는 undefined인 경우 undefined를 반환</code>하고, 그렇지 않으면 우항의 프로퍼티 참조를 이어간다. 객체를 가리키기를 기대하는 변수가 null 또는 undefined가 아닌지 확인하고 프로퍼티를 참조할 때 유용하다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">elem</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
  <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="nx">elem</span><span class="p">?.</span><span class="nx">value</span><span class="p">;</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span> <span class="c1">// undefined </span>
</code></pre></div></div>

<p>좌항 피연산자가 false로 평가되는 Falsy 값이라도 null 또는 undefined가 아니면 우항의 프로퍼티 참조를 이어간다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
  <span class="kd">var</span> <span class="nx">length</span> <span class="o">=</span> <span class="nx">str</span><span class="p">?.</span><span class="nx">length</span><span class="p">;</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">length</span><span class="p">);</span> <span class="c1">// 0</span>
</code></pre></div></div>

<h3 id="943-null-병합-연산자">9.4.3 null 병합 연산자</h3>
<p>ES11에서 도입된 null 병합 연산자 ??는 좌항의 피연산자가 null 또는 undefined인 경우 우항의 피연산자를 반환하고, 그렇지 않으면 좌항의 피연산자를 반환한다. 변수에 기본값을 설정할 때 유용하다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">var</span> <span class="nx">foo</span> <span class="o">=</span> <span class="kc">null</span> <span class="p">??</span> <span class="dl">'</span><span class="s1">default string</span><span class="dl">'</span><span class="p">;</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">foo</span><span class="p">);</span> <span class="c1">// "default string"</span>
</code></pre></div></div>
:ET